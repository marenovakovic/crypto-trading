restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ErrorWidget(
  tradingState: TradingState
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ErrorWidgetNoInternetPreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ErrorWidgetNoInternetOldDataPreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ErrorWidgetGenericErrorPreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun ErrorWidgetGenericErrorOldDataPreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun LoadingIndicator()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun LoadingIndicatorPreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun RowLabel(
  stable text: String
  stable imageVector: ImageVector?
  stable onClick: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun RowLabelPreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SearchField(
  stable query: String
  stable onQueryChange: Function1<String, Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SearchFieldEmptyPreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun SearchFieldFilledInPreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TickerCard(
  stable ticker: Ticker
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TickerCardPositiveChangePreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TickerCardNegativeChangePreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TickersList(
  stable tickers: ImmutableList<Ticker>
  stable sorting: TickerSorting
  stable sortByPrice: Function0<Unit>
  stable sortByName: Function0<Unit>
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TickersListPreview()
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TradingScreen(
  stable modifier: Modifier? = @static Companion
  unstable viewModel: TradingViewModel? = @dynamic viewModel(null, null, null, null, $composer, 0, 0b1111)
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun TradingScreenContent(
  tradingState: TradingState
  stable queryTickers: Function1<String, Unit>
  stable sortByPrice: Function0<Unit>
  stable sortByName: Function0<Unit>
  stable modifier: Modifier? = @static Companion
)
restartable skippable scheme("[0, [0]]") fun SwissborgTechChallengeTheme(
  stable darkTheme: Boolean = @dynamic isSystemInDarkTheme($composer, 0)
  stable dynamicColor: Boolean = @static true
  stable content: Function2<Composer, Int, Unit>
)
